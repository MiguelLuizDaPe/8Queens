# -*- coding: utf-8 -*-
"""8Queens.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NvGYEfEfS7EF19DJAH5-hMJLHp7FpeZN
"""

import numpy as np

def IsSafe(board:np.array, row: int, col:int):
  if row in NotSafeRows:
    return False

  i, j = row, col
  while i >= 0 and j >= 0:
    if board[i][j] == True:
      return False
    i -= 1
    j -= 1

  i, j = row, col
  while i < N and j >= 0:
    if board[i][j] == True:
      return False
    i += 1
    j -= 1

  return True

def QueensProblem(board:np.array, col: int, row: int, WantToChoose: bool):
  if WantToChoose:
    board[row][col] = True
    NotSafeRows.append(row)

    if QueensProblem(board, col+1, 0, False):
      return True

    board[row][col] = False
    NotSafeRows.pop()

  if col == N:
    return True
  for i in range(0, N):
    if IsSafe(board, i, col):
      board[i][col] = True
      NotSafeRows.append(i)

      if QueensProblem(board, col+1, 0, False):
        return True

      board[i][col] = False
      NotSafeRows.pop()
  return False

def PrintMatrix(board:np.array):
  for i in range(0,N):
    s = ""
    for j in range(0,N):
      if board[i][j] == False:
        s = s + ". "
      if board[i][j] == True:
        s = s + "Q "
    print(s)

N = 8
NotSafeRows = []

#Coordenadas para a posição da primeira rainha
X = 0
Y = 4

b = np.zeros((N,N), dtype=bool)
if not QueensProblem(b, X, Y, True):
  print("Algo de errado não deu certo")
PrintMatrix(b)